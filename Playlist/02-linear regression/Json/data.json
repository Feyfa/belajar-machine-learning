[
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 10,
            "x_actual": 0.1,
            "y_actual": 0.30345444876224736,
            "y_prediksi": 1.0
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.6965455512377526,
            "delta_m_before": -6.965455512377526,
            "learning_rate": 0.1,
            "delta_m": -0.6965455512377526
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 10,
            "m_prediksi": 9.303454448762247
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 9.303454448762247,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                93.03454448762247
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 9.303454448762247,
            "x_actual": 0.2,
            "y_actual": 0.9396435212064804,
            "y_prediksi": 1.8606908897524495
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.921047368545969,
            "delta_m_before": -4.605236842729845,
            "learning_rate": 0.1,
            "delta_m": -0.4605236842729845
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 9.303454448762247,
            "m_prediksi": 8.842930764489262
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 8.842930764489262,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                88.42930764489262
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 8.842930764489262,
            "x_actual": 0.30000000000000004,
            "y_actual": 0.5188947518493547,
            "y_prediksi": 2.652879229346779
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.133984477497424,
            "delta_m_before": -7.11328159165808,
            "learning_rate": 0.1,
            "delta_m": -0.711328159165808
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 8.842930764489262,
            "m_prediksi": 8.131602605323454
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 8.131602605323454,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                81.31602605323454
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 8.131602605323454,
            "x_actual": 0.4,
            "y_actual": 0.470327157636378,
            "y_prediksi": 3.252641042129382
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.782313884493004,
            "delta_m_before": -6.95578471123251,
            "learning_rate": 0.1,
            "delta_m": -0.695578471123251
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 8.131602605323454,
            "m_prediksi": 7.436024134200204
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 7.436024134200204,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                74.36024134200204
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 7.436024134200204,
            "x_actual": 0.5,
            "y_actual": 1.2176652073222631,
            "y_prediksi": 3.718012067100102
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.5003468597778387,
            "delta_m_before": -5.000693719555677,
            "learning_rate": 0.1,
            "delta_m": -0.5000693719555678
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 7.436024134200204,
            "m_prediksi": 6.935954762244636
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 6.935954762244636,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                69.35954762244636
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 6.935954762244636,
            "x_actual": 0.6000000000000001,
            "y_actual": 0.9826148792466084,
            "y_prediksi": 4.1615728573467825
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -3.178957978100174,
            "delta_m_before": -5.298263296833623,
            "learning_rate": 0.1,
            "delta_m": -0.5298263296833623
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 6.935954762244636,
            "m_prediksi": 6.406128432561274
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 6.406128432561274,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                64.06128432561273
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 6.406128432561274,
            "x_actual": 0.7000000000000001,
            "y_actual": 1.677600234151224,
            "y_prediksi": 4.484289902792892
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.8066896686416687,
            "delta_m_before": -4.009556669488098,
            "learning_rate": 0.1,
            "delta_m": -0.4009556669488098
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 6.406128432561274,
            "m_prediksi": 6.005172765612464
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 6.005172765612464,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                60.05172765612464
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 6.005172765612464,
            "x_actual": 0.8,
            "y_actual": 1.5304649872001295,
            "y_prediksi": 4.804138212489971
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -3.273673225289842,
            "delta_m_before": -4.0920915316123025,
            "learning_rate": 0.1,
            "delta_m": -0.4092091531612303
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 6.005172765612464,
            "m_prediksi": 5.595963612451234
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 5.595963612451234,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                55.95963612451234
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 5.595963612451234,
            "x_actual": 0.9,
            "y_actual": 1.2829751637919435,
            "y_prediksi": 5.03636725120611
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -3.753392087414167,
            "delta_m_before": -4.170435652682407,
            "learning_rate": 0.1,
            "delta_m": -0.4170435652682407
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 5.595963612451234,
            "m_prediksi": 5.178920047182993
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 5.178920047182993,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                51.78920047182993
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 5.178920047182993,
            "x_actual": 1.0,
            "y_actual": 1.9442047561107385,
            "y_prediksi": 5.178920047182993
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -3.2347152910722548,
            "delta_m_before": -3.2347152910722548,
            "learning_rate": 0.1,
            "delta_m": -0.3234715291072255
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 5.178920047182993,
            "m_prediksi": 4.855448518075768
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 4.855448518075768,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                48.55448518075768
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 4.855448518075768,
            "x_actual": 1.1,
            "y_actual": 1.3931448718386266,
            "y_prediksi": 5.340993369883345
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -3.947848498044719,
            "delta_m_before": -3.588953180040653,
            "learning_rate": 0.1,
            "delta_m": -0.3588953180040653
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 4.855448518075768,
            "m_prediksi": 4.496553200071703
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 4.496553200071703,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                44.965532000717026
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 4.496553200071703,
            "x_actual": 1.2000000000000002,
            "y_actual": 1.3184686357458162,
            "y_prediksi": 5.395863840086044
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -4.0773952043402275,
            "delta_m_before": -3.3978293369501893,
            "learning_rate": 0.1,
            "delta_m": -0.33978293369501894
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 4.496553200071703,
            "m_prediksi": 4.156770266376684
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 4.156770266376684,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                41.56770266376684
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 4.156770266376684,
            "x_actual": 1.3,
            "y_actual": 2.1465743870950518,
            "y_prediksi": 5.40380134628969
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -3.257226959194638,
            "delta_m_before": -2.5055591993804907,
            "learning_rate": 0.1,
            "delta_m": -0.2505559199380491
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 4.156770266376684,
            "m_prediksi": 3.906214346438635
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 3.906214346438635,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                39.06214346438635
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 3.906214346438635,
            "x_actual": 1.4000000000000001,
            "y_actual": 1.6952945587229347,
            "y_prediksi": 5.468700085014089
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -3.7734055262911546,
            "delta_m_before": -2.6952896616365387,
            "learning_rate": 0.1,
            "delta_m": -0.2695289661636539
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 3.906214346438635,
            "m_prediksi": 3.6366853802749812
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 3.6366853802749812,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                36.366853802749816
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 3.6366853802749812,
            "x_actual": 1.5,
            "y_actual": 1.9387726193119785,
            "y_prediksi": 5.455028070412472
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -3.516255451100493,
            "delta_m_before": -2.344170300733662,
            "learning_rate": 0.1,
            "delta_m": -0.23441703007336623
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 3.6366853802749812,
            "m_prediksi": 3.402268350201615
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 3.402268350201615,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                34.02268350201615
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 3.402268350201615,
            "x_actual": 1.6,
            "y_actual": 1.6019314975052115,
            "y_prediksi": 5.443629360322585
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -3.841697862817373,
            "delta_m_before": -2.401061164260858,
            "learning_rate": 0.1,
            "delta_m": -0.2401061164260858
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 3.402268350201615,
            "m_prediksi": 3.162162233775529
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 3.162162233775529,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                31.62162233775529
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 3.162162233775529,
            "x_actual": 1.7000000000000002,
            "y_actual": 2.3457557677425993,
            "y_prediksi": 5.3756757974184
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -3.0299200296758007,
            "delta_m_before": -1.7823058998092942,
            "learning_rate": 0.1,
            "delta_m": -0.17823058998092944
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 3.162162233775529,
            "m_prediksi": 2.9839316437945995
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 2.9839316437945995,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                29.839316437945996
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 2.9839316437945995,
            "x_actual": 1.8,
            "y_actual": 2.636949479337602,
            "y_prediksi": 5.37107695883028
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.7341274794926775,
            "delta_m_before": -1.5189597108292652,
            "learning_rate": 0.1,
            "delta_m": -0.15189597108292652
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 2.9839316437945995,
            "m_prediksi": 2.832035672711673
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 2.832035672711673,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                28.320356727116728
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 2.832035672711673,
            "x_actual": 1.9000000000000001,
            "y_actual": 2.8760694693912034,
            "y_prediksi": 5.3808677781521785
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.504798308760975,
            "delta_m_before": -1.3183148993478815,
            "learning_rate": 0.1,
            "delta_m": -0.13183148993478816
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 2.832035672711673,
            "m_prediksi": 2.7002041827768846
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 2.7002041827768846,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                27.002041827768846
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 2.7002041827768846,
            "x_actual": 2.0,
            "y_actual": 2.16575517002925,
            "y_prediksi": 5.400408365553769
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -3.234653195524519,
            "delta_m_before": -1.6173265977622595,
            "learning_rate": 0.1,
            "delta_m": -0.16173265977622597
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 2.7002041827768846,
            "m_prediksi": 2.5384715230006587
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 2.5384715230006587,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                25.384715230006588
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 2.5384715230006587,
            "x_actual": 2.1,
            "y_actual": 2.733631472452952,
            "y_prediksi": 5.330790198301384
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.597158725848432,
            "delta_m_before": -1.236742250404015,
            "learning_rate": 0.1,
            "delta_m": -0.12367422504040151
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 2.5384715230006587,
            "m_prediksi": 2.414797297960257
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 2.414797297960257,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                24.14797297960257
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 2.414797297960257,
            "x_actual": 2.2,
            "y_actual": 2.730350654195636,
            "y_prediksi": 5.312554055512566
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.5822034013169297,
            "delta_m_before": -1.1737288187804225,
            "learning_rate": 0.1,
            "delta_m": -0.11737288187804225
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 2.414797297960257,
            "m_prediksi": 2.297424416082215
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 2.297424416082215,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                22.97424416082215
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 2.297424416082215,
            "x_actual": 2.3000000000000003,
            "y_actual": 2.355867896542013,
            "y_prediksi": 5.284076156989094
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.9282082604470814,
            "delta_m_before": -1.2731340262813395,
            "learning_rate": 0.1,
            "delta_m": -0.12731340262813395
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 2.297424416082215,
            "m_prediksi": 2.170111013454081
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 2.170111013454081,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                21.70111013454081
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 2.170111013454081,
            "x_actual": 2.4000000000000004,
            "y_actual": 2.964186440730453,
            "y_prediksi": 5.208266432289795
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.2440799915593423,
            "delta_m_before": -0.9350333298163925,
            "learning_rate": 0.1,
            "delta_m": -0.09350333298163926
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 2.170111013454081,
            "m_prediksi": 2.0766076804724416
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 2.0766076804724416,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                20.766076804724417
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 2.0766076804724416,
            "x_actual": 2.5,
            "y_actual": 3.3910692965884577,
            "y_prediksi": 5.191519201181104
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.8004499045926465,
            "delta_m_before": -0.7201799618370586,
            "learning_rate": 0.1,
            "delta_m": -0.07201799618370586
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 2.0766076804724416,
            "m_prediksi": 2.0045896842887356
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 2.0045896842887356,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                20.045896842887355
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 2.0045896842887356,
            "x_actual": 2.6,
            "y_actual": 2.7678855103677003,
            "y_prediksi": 5.211933179150713
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.444047668783013,
            "delta_m_before": -0.9400183341473126,
            "learning_rate": 0.1,
            "delta_m": -0.09400183341473127
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 2.0045896842887356,
            "m_prediksi": 1.9105878508740044
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.9105878508740044,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                19.105878508740044
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.9105878508740044,
            "x_actual": 2.7,
            "y_actual": 3.3111578094556893,
            "y_prediksi": 5.158587197359812
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.8474293879041226,
            "delta_m_before": -0.6842331066311564,
            "learning_rate": 0.1,
            "delta_m": -0.06842331066311565
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.9105878508740044,
            "m_prediksi": 1.8421645402108888
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.8421645402108888,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                18.421645402108886
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.8421645402108888,
            "x_actual": 2.8000000000000003,
            "y_actual": 2.8674070550955335,
            "y_prediksi": 5.15806071259049
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -2.290653657494956,
            "delta_m_before": -0.8180905919624842,
            "learning_rate": 0.1,
            "delta_m": -0.08180905919624842
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.8421645402108888,
            "m_prediksi": 1.7603554810146405
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.7603554810146405,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                17.603554810146406
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.7603554810146405,
            "x_actual": 2.9000000000000004,
            "y_actual": 3.819716128485968,
            "y_prediksi": 5.105030894942458
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.28531476645649,
            "delta_m_before": -0.4432119884332723,
            "learning_rate": 0.1,
            "delta_m": -0.044321198843327234
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.7603554810146405,
            "m_prediksi": 1.7160342821713133
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.7160342821713133,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                17.160342821713133
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.7160342821713133,
            "x_actual": 3.0,
            "y_actual": 3.843610811404186,
            "y_prediksi": 5.14810284651394
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.3044920351097535,
            "delta_m_before": -0.43483067836991784,
            "learning_rate": 0.1,
            "delta_m": -0.04348306783699179
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.7160342821713133,
            "m_prediksi": 1.6725512143343215
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.6725512143343215,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                16.725512143343217
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.6725512143343215,
            "x_actual": 3.1,
            "y_actual": 3.224657602456049,
            "y_prediksi": 5.184908764436397
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.9602511619803478,
            "delta_m_before": -0.6323390845097896,
            "learning_rate": 0.1,
            "delta_m": -0.06323390845097897
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.6725512143343215,
            "m_prediksi": 1.6093173058833425
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.6093173058833425,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                16.093173058833425
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.6093173058833425,
            "x_actual": 3.2,
            "y_actual": 3.493003576032994,
            "y_prediksi": 5.1498153788266965
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.6568118027937024,
            "delta_m_before": -0.5177536883730319,
            "learning_rate": 0.1,
            "delta_m": -0.051775368837303194
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.6093173058833425,
            "m_prediksi": 1.5575419370460393
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.5575419370460393,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                15.575419370460393
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.5575419370460393,
            "x_actual": 3.3000000000000003,
            "y_actual": 4.170988635496819,
            "y_prediksi": 5.13988839225193
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.9688997567551105,
            "delta_m_before": -0.293605986895488,
            "learning_rate": 0.1,
            "delta_m": -0.0293605986895488
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.5575419370460393,
            "m_prediksi": 1.5281813383564904
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.5281813383564904,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                15.281813383564904
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.5281813383564904,
            "x_actual": 3.4000000000000004,
            "y_actual": 4.220831510633134,
            "y_prediksi": 5.195816550412068
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.9749850397789332,
            "delta_m_before": -0.2867603058173333,
            "learning_rate": 0.1,
            "delta_m": -0.028676030581733333
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.5281813383564904,
            "m_prediksi": 1.499505307774757
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.499505307774757,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                14.99505307774757
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.499505307774757,
            "x_actual": 3.5,
            "y_actual": 4.428030578635913,
            "y_prediksi": 5.2482685772116495
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.8202379985757364,
            "delta_m_before": -0.23435371387878184,
            "learning_rate": 0.1,
            "delta_m": -0.023435371387878184
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.499505307774757,
            "m_prediksi": 1.476069936386879
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.476069936386879,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                14.76069936386879
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.476069936386879,
            "x_actual": 3.6,
            "y_actual": 3.978840061614765,
            "y_prediksi": 5.313851770992764
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.3350117093779996,
            "delta_m_before": -0.37083658593833324,
            "learning_rate": 0.1,
            "delta_m": -0.03708365859383333
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.476069936386879,
            "m_prediksi": 1.4389862777930458
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.4389862777930458,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                14.389862777930457
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.4389862777930458,
            "x_actual": 3.7,
            "y_actual": 4.507037123492762,
            "y_prediksi": 5.32424922783427
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.8172121043415075,
            "delta_m_before": -0.22086813630851554,
            "learning_rate": 0.1,
            "delta_m": -0.022086813630851555
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.4389862777930458,
            "m_prediksi": 1.4168994641621941
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.4168994641621941,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                14.168994641621941
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.4168994641621941,
            "x_actual": 3.8000000000000003,
            "y_actual": 4.078297831899906,
            "y_prediksi": 5.384217963816338
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.305920131916432,
            "delta_m_before": -0.34366319260958733,
            "learning_rate": 0.1,
            "delta_m": -0.03436631926095873
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.4168994641621941,
            "m_prediksi": 1.3825331449012355
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.3825331449012355,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                13.825331449012355
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.3825331449012355,
            "x_actual": 3.9000000000000004,
            "y_actual": 4.642516381834396,
            "y_prediksi": 5.391879265114818
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.7493628832804227,
            "delta_m_before": -0.1921443290462622,
            "learning_rate": 0.1,
            "delta_m": -0.01921443290462622
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.3825331449012355,
            "m_prediksi": 1.3633187119966093
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.3633187119966093,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                13.633187119966092
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.3633187119966093,
            "x_actual": 4.0,
            "y_actual": 4.17346967305544,
            "y_prediksi": 5.453274847986437
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.2798051749309973,
            "delta_m_before": -0.31995129373274933,
            "learning_rate": 0.1,
            "delta_m": -0.031995129373274936
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.3633187119966093,
            "m_prediksi": 1.3313235826233343
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.3313235826233343,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                13.313235826233342
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.3313235826233343,
            "x_actual": 4.1000000000000005,
            "y_actual": 4.267003193807523,
            "y_prediksi": 5.458426688755671
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.1914234949481486,
            "delta_m_before": -0.2905910963288167,
            "learning_rate": 0.1,
            "delta_m": -0.02905910963288167
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.3313235826233343,
            "m_prediksi": 1.3022644729904527
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.3022644729904527,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                13.022644729904528
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.3022644729904527,
            "x_actual": 4.2,
            "y_actual": 5.131557073344543,
            "y_prediksi": 5.469510786559901
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.3379537132153585,
            "delta_m_before": -0.0804651698131806,
            "learning_rate": 0.1,
            "delta_m": -0.00804651698131806
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.3022644729904527,
            "m_prediksi": 1.2942179560091347
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.2942179560091347,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                12.942179560091347
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.2942179560091347,
            "x_actual": 4.3,
            "y_actual": 4.523021824844193,
            "y_prediksi": 5.565137210839279
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.0421153859950865,
            "delta_m_before": -0.24235241534769453,
            "learning_rate": 0.1,
            "delta_m": -0.024235241534769456
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.2942179560091347,
            "m_prediksi": 1.2699827144743652
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.2699827144743652,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                12.69982714474365
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.2699827144743652,
            "x_actual": 4.4,
            "y_actual": 5.374754978833277,
            "y_prediksi": 5.5879239436872075
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.21316896485393055,
            "delta_m_before": -0.04844749201225694,
            "learning_rate": 0.1,
            "delta_m": -0.004844749201225695
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.2699827144743652,
            "m_prediksi": 1.2651379652731394
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.2651379652731394,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                12.651379652731393
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.2651379652731394,
            "x_actual": 4.5,
            "y_actual": 4.536902383795687,
            "y_prediksi": 5.693120843729127
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -1.1562184599334397,
            "delta_m_before": -0.25693743554076437,
            "learning_rate": 0.1,
            "delta_m": -0.02569374355407644
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.2651379652731394,
            "m_prediksi": 1.2394442217190629
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.2394442217190629,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                12.39444221719063
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.2394442217190629,
            "x_actual": 4.6000000000000005,
            "y_actual": 5.544695985188324,
            "y_prediksi": 5.70144341990769
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.15674743471936647,
            "delta_m_before": -0.0340755292868188,
            "learning_rate": 0.1,
            "delta_m": -0.00340755292868188
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.2394442217190629,
            "m_prediksi": 1.236036668790381
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.236036668790381,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                12.36036668790381
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.236036668790381,
            "x_actual": 4.7,
            "y_actual": 4.977138429775578,
            "y_prediksi": 5.809372343314791
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.8322339135392127,
            "delta_m_before": -0.17707104543387503,
            "learning_rate": 0.1,
            "delta_m": -0.017707104543387503
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.236036668790381,
            "m_prediksi": 1.2183295642469936
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.2183295642469936,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                12.183295642469936
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.2183295642469936,
            "x_actual": 4.800000000000001,
            "y_actual": 5.130149779778315,
            "y_prediksi": 5.84798190838557
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.7178321286072551,
            "delta_m_before": -0.14954836012651146,
            "learning_rate": 0.1,
            "delta_m": -0.014954836012651147
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.2183295642469936,
            "m_prediksi": 1.2033747282343423
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.2033747282343423,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                12.033747282343423
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.2033747282343423,
            "x_actual": 4.9,
            "y_actual": 5.116034869053465,
            "y_prediksi": 5.896536168348278
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.780501299294813,
            "delta_m_before": -0.15928597944792103,
            "learning_rate": 0.1,
            "delta_m": -0.015928597944792105
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.2033747282343423,
            "m_prediksi": 1.1874461302895503
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.1874461302895503,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.874461302895503
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.1874461302895503,
            "x_actual": 5.0,
            "y_actual": 5.1005965391344334,
            "y_prediksi": 5.937230651447751
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.8366341123133179,
            "delta_m_before": -0.16732682246266356,
            "learning_rate": 0.1,
            "delta_m": -0.016732682246266357
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.1874461302895503,
            "m_prediksi": 1.170713448043284
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.170713448043284,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.707134480432838
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.170713448043284,
            "x_actual": 5.1000000000000005,
            "y_actual": 5.734627322843221,
            "y_prediksi": 5.970638585020748
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.23601126217752721,
            "delta_m_before": -0.04627671807402494,
            "learning_rate": 0.1,
            "delta_m": -0.0046276718074024946
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.170713448043284,
            "m_prediksi": 1.1660857762358814
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.1660857762358814,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.660857762358814
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.1660857762358814,
            "x_actual": 5.2,
            "y_actual": 6.065680924175358,
            "y_prediksi": 6.063646036426584
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.002034887748774139,
            "delta_m_before": 0.0003913245670719498,
            "learning_rate": 0.1,
            "delta_m": 3.913245670719498e-05
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.1660857762358814,
            "m_prediksi": 1.1661249086925887
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.1661249086925887,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.661249086925887
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.1661249086925887,
            "x_actual": 5.300000000000001,
            "y_actual": 5.573382241220682,
            "y_prediksi": 6.180462016070721
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.607079774850039,
            "delta_m_before": -0.11454335374529036,
            "learning_rate": 0.1,
            "delta_m": -0.011454335374529036
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.1661249086925887,
            "m_prediksi": 1.1546705733180596
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.1546705733180596,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.546705733180595
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.1546705733180596,
            "x_actual": 5.4,
            "y_actual": 5.90657983367048,
            "y_prediksi": 6.235221095917522
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.32864126224704204,
            "delta_m_before": -0.060859493008711484,
            "learning_rate": 0.1,
            "delta_m": -0.0060859493008711485
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.1546705733180596,
            "m_prediksi": 1.1485846240171884
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.1485846240171884,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.485846240171885
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.1485846240171884,
            "x_actual": 5.5,
            "y_actual": 5.738547980372563,
            "y_prediksi": 6.317215432094536
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.578667451721973,
            "delta_m_before": -0.10521226394944963,
            "learning_rate": 0.1,
            "delta_m": -0.010521226394944964
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.1485846240171884,
            "m_prediksi": 1.1380633976222434
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.1380633976222434,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.380633976222434
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.1380633976222434,
            "x_actual": 5.6000000000000005,
            "y_actual": 6.050124375974229,
            "y_prediksi": 6.373155026684564
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.32303065071033465,
            "delta_m_before": -0.05768404476970261,
            "learning_rate": 0.1,
            "delta_m": -0.0057684044769702614
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.1380633976222434,
            "m_prediksi": 1.132294993145273
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.132294993145273,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.32294993145273
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.132294993145273,
            "x_actual": 5.7,
            "y_actual": 6.675960144456686,
            "y_prediksi": 6.454081460928056
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.2218786835286295,
            "delta_m_before": 0.03892608482958412,
            "learning_rate": 0.1,
            "delta_m": 0.0038926084829584125
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.132294993145273,
            "m_prediksi": 1.1361876016282315
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.1361876016282315,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.361876016282315
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.1361876016282315,
            "x_actual": 5.800000000000001,
            "y_actual": 6.438466882725557,
            "y_prediksi": 6.589888089443743
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.1514212067181866,
            "delta_m_before": -0.026107104606583893,
            "learning_rate": 0.1,
            "delta_m": -0.0026107104606583895
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.1361876016282315,
            "m_prediksi": 1.1335768911675732
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.1335768911675732,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.335768911675732
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.1335768911675732,
            "x_actual": 5.9,
            "y_actual": 6.7613255601141296,
            "y_prediksi": 6.688103657888682
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.07322190222544744,
            "delta_m_before": 0.01241049190261821,
            "learning_rate": 0.1,
            "delta_m": 0.0012410491902618212
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.1335768911675732,
            "m_prediksi": 1.1348179403578351
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.1348179403578351,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.348179403578351
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.1348179403578351,
            "x_actual": 6.0,
            "y_actual": 6.003172631348161,
            "y_prediksi": 6.808907642147011
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.8057350107988501,
            "delta_m_before": -0.134289168466475,
            "learning_rate": 0.1,
            "delta_m": -0.013428916846647501
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.1348179403578351,
            "m_prediksi": 1.1213890235111876
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.1213890235111876,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.213890235111876
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.1213890235111876,
            "x_actual": 6.1000000000000005,
            "y_actual": 6.136330818885365,
            "y_prediksi": 6.840473043418245
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.7041422245328803,
            "delta_m_before": -0.11543315156276726,
            "learning_rate": 0.1,
            "delta_m": -0.011543315156276726
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.1213890235111876,
            "m_prediksi": 1.109845708354911
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.109845708354911,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                11.098457083549109
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.109845708354911,
            "x_actual": 6.2,
            "y_actual": 6.263253212286266,
            "y_prediksi": 6.881043391800448
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.6177901795141825,
            "delta_m_before": -0.09964357734099717,
            "learning_rate": 0.1,
            "delta_m": -0.009964357734099719
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.109845708354911,
            "m_prediksi": 1.0998813506208112
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0998813506208112,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.998813506208112
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0998813506208112,
            "x_actual": 6.300000000000001,
            "y_actual": 6.8171598394971,
            "y_prediksi": 6.929252508911111
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.11209266941401186,
            "delta_m_before": -0.01779248720857331,
            "learning_rate": 0.1,
            "delta_m": -0.001779248720857331
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0998813506208112,
            "m_prediksi": 1.0981021018999537
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0981021018999537,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.981021018999538
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0981021018999537,
            "x_actual": 6.4,
            "y_actual": 6.532804274438561,
            "y_prediksi": 7.027853452159704
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.49504917772114254,
            "delta_m_before": -0.07735143401892852,
            "learning_rate": 0.1,
            "delta_m": -0.007735143401892852
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0981021018999537,
            "m_prediksi": 1.0903669584980609
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0903669584980609,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.903669584980609
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0903669584980609,
            "x_actual": 6.5,
            "y_actual": 6.569552316637929,
            "y_prediksi": 7.087385230237396
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.5178329135994666,
            "delta_m_before": -0.07966660209222563,
            "learning_rate": 0.1,
            "delta_m": -0.007966660209222563
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0903669584980609,
            "m_prediksi": 1.0824002982888383
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0824002982888383,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.824002982888384
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0824002982888383,
            "x_actual": 6.6000000000000005,
            "y_actual": 6.949461708021699,
            "y_prediksi": 7.143841968706334
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.19438026068463454,
            "delta_m_before": -0.02945155464918705,
            "learning_rate": 0.1,
            "delta_m": -0.002945155464918705
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0824002982888383,
            "m_prediksi": 1.0794551428239196
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0794551428239196,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.794551428239195
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0794551428239196,
            "x_actual": 6.7,
            "y_actual": 7.105647940488258,
            "y_prediksi": 7.232349456920262
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.12670151643200356,
            "delta_m_before": -0.018910674094328887,
            "learning_rate": 0.1,
            "delta_m": -0.0018910674094328888
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0794551428239196,
            "m_prediksi": 1.0775640754144868
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0775640754144868,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.775640754144868
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0775640754144868,
            "x_actual": 6.800000000000001,
            "y_actual": 7.755268674045778,
            "y_prediksi": 7.327435712818511
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.4278329612272671,
            "delta_m_before": 0.06291661194518633,
            "learning_rate": 0.1,
            "delta_m": 0.0062916611945186334
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0775640754144868,
            "m_prediksi": 1.0838557366090056
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0838557366090056,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.838557366090056
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0838557366090056,
            "x_actual": 6.9,
            "y_actual": 7.8899554284885305,
            "y_prediksi": 7.478604582602139
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.4113508458863917,
            "delta_m_before": 0.059616064621216186,
            "learning_rate": 0.1,
            "delta_m": 0.005961606462121619
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0838557366090056,
            "m_prediksi": 1.089817343071127
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.089817343071127,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.898173430711271
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.089817343071127,
            "x_actual": 7.0,
            "y_actual": 7.400198868582127,
            "y_prediksi": 7.62872140149789
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.22852253291576297,
            "delta_m_before": -0.03264607613082328,
            "learning_rate": 0.1,
            "delta_m": -0.003264607613082328
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.089817343071127,
            "m_prediksi": 1.0865527354580449
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0865527354580449,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.865527354580449
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0865527354580449,
            "x_actual": 7.1000000000000005,
            "y_actual": 7.994337089302139,
            "y_prediksi": 7.714524421752119
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.27981266755001943,
            "delta_m_before": 0.03941023486619992,
            "learning_rate": 0.1,
            "delta_m": 0.003941023486619992
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0865527354580449,
            "m_prediksi": 1.0904937589446648
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0904937589446648,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.904937589446648
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0904937589446648,
            "x_actual": 7.2,
            "y_actual": 8.063315184817332,
            "y_prediksi": 7.851555064401587
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.21176012041574577,
            "delta_m_before": 0.029411127835520245,
            "learning_rate": 0.1,
            "delta_m": 0.0029411127835520245
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0904937589446648,
            "m_prediksi": 1.093434871728217
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.093434871728217,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.93434871728217
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.093434871728217,
            "x_actual": 7.300000000000001,
            "y_actual": 8.179817651998821,
            "y_prediksi": 7.982074563615985
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.19774308838283616,
            "delta_m_before": 0.02708809429901865,
            "learning_rate": 0.1,
            "delta_m": 0.0027088094299018654
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.093434871728217,
            "m_prediksi": 1.0961436811581189
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0961436811581189,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.961436811581189
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0961436811581189,
            "x_actual": 7.4,
            "y_actual": 8.24885958469579,
            "y_prediksi": 8.11146324057008
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.13739634412571,
            "delta_m_before": 0.01856707353050135,
            "learning_rate": 0.1,
            "delta_m": 0.0018567073530501351
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0961436811581189,
            "m_prediksi": 1.098000388511169
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.098000388511169,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.98000388511169
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.098000388511169,
            "x_actual": 7.5,
            "y_actual": 7.741011273817737,
            "y_prediksi": 8.235002913833767
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.4939916400160307,
            "delta_m_before": -0.06586555200213742,
            "learning_rate": 0.1,
            "delta_m": -0.006586555200213742
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.098000388511169,
            "m_prediksi": 1.0914138333109553
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0914138333109553,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.914138333109554
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0914138333109553,
            "x_actual": 7.6000000000000005,
            "y_actual": 7.674931151124382,
            "y_prediksi": 8.29474513316326
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.6198139820388784,
            "delta_m_before": -0.08155447132090504,
            "learning_rate": 0.1,
            "delta_m": -0.008155447132090505
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0914138333109553,
            "m_prediksi": 1.0832583861788647
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0832583861788647,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.832583861788647
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0832583861788647,
            "x_actual": 7.7,
            "y_actual": 7.979345227014985,
            "y_prediksi": 8.341089573577259
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.36174434656227383,
            "delta_m_before": -0.04697978526782777,
            "learning_rate": 0.1,
            "delta_m": -0.004697978526782777
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0832583861788647,
            "m_prediksi": 1.0785604076520818
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0785604076520818,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.78560407652082
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0785604076520818,
            "x_actual": 7.800000000000001,
            "y_actual": 8.5329632411038,
            "y_prediksi": 8.412771179686239
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.120192061417562,
            "delta_m_before": 0.015409238643277179,
            "learning_rate": 0.1,
            "delta_m": 0.001540923864327718
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0785604076520818,
            "m_prediksi": 1.0801013315164096
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0801013315164096,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.801013315164097
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0801013315164096,
            "x_actual": 7.9,
            "y_actual": 7.981751900699312,
            "y_prediksi": 8.532800518979636
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.5510486182803245,
            "delta_m_before": -0.06975298965573727,
            "learning_rate": 0.1,
            "delta_m": -0.006975298965573727
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0801013315164096,
            "m_prediksi": 1.0731260325508358
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0731260325508358,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.731260325508359
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0731260325508358,
            "x_actual": 8.0,
            "y_actual": 8.190629896349586,
            "y_prediksi": 8.585008260406687
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.3943783640571006,
            "delta_m_before": -0.04929729550713757,
            "learning_rate": 0.1,
            "delta_m": -0.0049297295507137575
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0731260325508358,
            "m_prediksi": 1.068196303000122
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.068196303000122,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.68196303000122
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.068196303000122,
            "x_actual": 8.1,
            "y_actual": 8.449256870786504,
            "y_prediksi": 8.652390054300987
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.20313318351448295,
            "delta_m_before": -0.025078170804257154,
            "learning_rate": 0.1,
            "delta_m": -0.0025078170804257154
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.068196303000122,
            "m_prediksi": 1.0656884859196962
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0656884859196962,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.656884859196962
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0656884859196962,
            "x_actual": 8.200000000000001,
            "y_actual": 9.025389480555082,
            "y_prediksi": 8.73864558454151
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.2867438960135722,
            "delta_m_before": 0.03496876780653319,
            "learning_rate": 0.1,
            "delta_m": 0.0034968767806533192
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0656884859196962,
            "m_prediksi": 1.0691853627003496
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0691853627003496,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.691853627003496
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0691853627003496,
            "x_actual": 8.3,
            "y_actual": 8.693085556936566,
            "y_prediksi": 8.874238510412903
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.18115295347633698,
            "delta_m_before": -0.0218256570453418,
            "learning_rate": 0.1,
            "delta_m": -0.00218256570453418
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0691853627003496,
            "m_prediksi": 1.0670027969958154
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0670027969958154,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.670027969958154
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0670027969958154,
            "x_actual": 8.4,
            "y_actual": 8.537433265161624,
            "y_prediksi": 8.96282349476485
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.4253902296032255,
            "delta_m_before": -0.050641694000383985,
            "learning_rate": 0.1,
            "delta_m": -0.0050641694000383985
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0670027969958154,
            "m_prediksi": 1.061938627595777
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.061938627595777,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.619386275957769
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.061938627595777,
            "x_actual": 8.5,
            "y_actual": 9.279197133155334,
            "y_prediksi": 9.026478334564104
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.25271879859123025,
            "delta_m_before": 0.02973162336367415,
            "learning_rate": 0.1,
            "delta_m": 0.002973162336367415
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.061938627595777,
            "m_prediksi": 1.0649117899321443
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0649117899321443,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.649117899321443
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0649117899321443,
            "x_actual": 8.6,
            "y_actual": 9.386460661518338,
            "y_prediksi": 9.158241393416441
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.2282192681018973,
            "delta_m_before": 0.026537124197895036,
            "learning_rate": 0.1,
            "delta_m": 0.002653712419789504
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0649117899321443,
            "m_prediksi": 1.0675655023519337
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0675655023519337,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.675655023519337
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0675655023519337,
            "x_actual": 8.700000000000001,
            "y_actual": 8.815427444360273,
            "y_prediksi": 9.287819870461824
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.4723924261015515,
            "delta_m_before": -0.05429798001167258,
            "learning_rate": 0.1,
            "delta_m": -0.005429798001167259
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0675655023519337,
            "m_prediksi": 1.0621357043507664
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0621357043507664,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.621357043507665
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0621357043507664,
            "x_actual": 8.8,
            "y_actual": 9.169048777617402,
            "y_prediksi": 9.346794198286746
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.1777454206693445,
            "delta_m_before": -0.020198343257880058,
            "learning_rate": 0.1,
            "delta_m": -0.002019834325788006
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0621357043507664,
            "m_prediksi": 1.0601158700249784
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0601158700249784,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.601158700249783
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0601158700249784,
            "x_actual": 8.9,
            "y_actual": 9.755536142497387,
            "y_prediksi": 9.435031243222308
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.32050489927507897,
            "delta_m_before": 0.03601178643540213,
            "learning_rate": 0.1,
            "delta_m": 0.003601178643540213
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0601158700249784,
            "m_prediksi": 1.0637170486685186
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0637170486685186,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.637170486685186
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0637170486685186,
            "x_actual": 9.0,
            "y_actual": 9.119248163368143,
            "y_prediksi": 9.573453438016667
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.45420527464852434,
            "delta_m_before": -0.050467252738724926,
            "learning_rate": 0.1,
            "delta_m": -0.0050467252738724926
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0637170486685186,
            "m_prediksi": 1.0586703233946462
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0586703233946462,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.586703233946462
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0586703233946462,
            "x_actual": 9.1,
            "y_actual": 9.370367466707613,
            "y_prediksi": 9.63389994289128
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.2635324761836664,
            "delta_m_before": -0.028959612767435867,
            "learning_rate": 0.1,
            "delta_m": -0.002895961276743587
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0586703233946462,
            "m_prediksi": 1.0557743621179025
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0557743621179025,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.557743621179025
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0557743621179025,
            "x_actual": 9.200000000000001,
            "y_actual": 9.48558457075467,
            "y_prediksi": 9.713124131484705
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.227539560730035,
            "delta_m_before": -0.024732560948916845,
            "learning_rate": 0.1,
            "delta_m": -0.002473256094891685
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0557743621179025,
            "m_prediksi": 1.0533011060230109
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0533011060230109,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.533011060230109
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0533011060230109,
            "x_actual": 9.3,
            "y_actual": 10.024222622653173,
            "y_prediksi": 9.795700286014002
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.22852233663917154,
            "delta_m_before": 0.024572294262276508,
            "learning_rate": 0.1,
            "delta_m": 0.002457229426227651
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0533011060230109,
            "m_prediksi": 1.0557583354492386
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0557583354492386,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.557583354492387
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0557583354492386,
            "x_actual": 9.4,
            "y_actual": 9.796008951364406,
            "y_prediksi": 9.924128353222843
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.12811940185843618,
            "delta_m_before": -0.013629723601961295,
            "learning_rate": 0.1,
            "delta_m": -0.0013629723601961295
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0557583354492386,
            "m_prediksi": 1.0543953630890424
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0543953630890424,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.543953630890424
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0543953630890424,
            "x_actual": 9.5,
            "y_actual": 10.225710916607069,
            "y_prediksi": 10.016755949345903
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.2089549672611657,
            "delta_m_before": 0.021995259711701652,
            "learning_rate": 0.1,
            "delta_m": 0.0021995259711701655
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0543953630890424,
            "m_prediksi": 1.0565948890602126
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0565948890602126,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.565948890602126
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0565948890602126,
            "x_actual": 9.600000000000001,
            "y_actual": 10.229090122702575,
            "y_prediksi": 10.143310934978043
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.08577918772453152,
            "delta_m_before": 0.008935332054638699,
            "learning_rate": 0.1,
            "delta_m": 0.0008935332054638699
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0565948890602126,
            "m_prediksi": 1.0574884222656764
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0574884222656764,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.574884222656763
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0574884222656764,
            "x_actual": 9.700000000000001,
            "y_actual": 10.335815450634229,
            "y_prediksi": 10.257637695977062
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": 0.07817775465716714,
            "delta_m_before": 0.008059562335790426,
            "learning_rate": 0.1,
            "delta_m": 0.0008059562335790426
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0574884222656764,
            "m_prediksi": 1.0582943784992556
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0582943784992556,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.582943784992555
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0582943784992556,
            "x_actual": 9.8,
            "y_actual": 10.13599807150219,
            "y_prediksi": 10.371284909292704
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.23528683779051462,
            "delta_m_before": -0.024008860999032103,
            "learning_rate": 0.1,
            "delta_m": -0.0024008860999032103
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0582943784992556,
            "m_prediksi": 1.0558934923993524
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0558934923993524,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.558934923993524
            ]
        }
    },
    {
        "step1": {
            "action": "dapatkan x_actual , y_actual , y_prediksi",
            "m_prediksi_before": 1.0558934923993524,
            "x_actual": 9.9,
            "y_actual": 10.135414276019167,
            "y_prediksi": 10.45334557475359
        },
        "step2": {
            "action": "hitung error dan dapatkan delta gradient nya",
            "error": -0.31793129873442183,
            "delta_m_before": -0.03211427259943655,
            "learning_rate": 0.1,
            "delta_m": -0.003211427259943655
        },
        "step3": {
            "action": "update gradient dari error yang di dapat",
            "m_prediksi_before": 1.0558934923993524,
            "m_prediksi": 1.0526820651394087
        },
        "step4": {
            "action": "setelah gradient telah di perbarui dari error yang di dapat, hitung lagi fungsi linear aggression dari gradient yang terbaru",
            "m_prediksi": 1.0526820651394087,
            "x_prediksi": [
                0,
                10
            ],
            "y_prediksi": [
                0.0,
                10.526820651394086
            ]
        }
    }
]